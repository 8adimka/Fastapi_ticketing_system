services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_DSN=postgresql://${PG_USER}:${PG_PASSWD}@postgres_sql:5432/${PG_DB_NAME}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres_sql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - selectel-tickets
    restart: unless-stopped

  postgres_sql:
    image: postgres:13.4-alpine
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWD}
      POSTGRES_DB: ${PG_DB_NAME}
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - selectel-tickets
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    sysctls:
      - net.core.somaxconn=511
    volumes:
      - ./redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - selectel-tickets
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  selectel-tickets:
    ipam:
      driver: default
      config:
        - subnet: 172.100.1.0/24
